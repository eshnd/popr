#!/bin/python3
import sys
import os
import pickle
import argparse
import requests
import subprocess

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-s", "--set", type=str, help="sets your main file")
    parser.add_argument("-a", "--add", type=str, nargs="+", help="installs bundles to project")
    parser.add_argument("-i", "--install", type=str, nargs="+", help="installs online bundles to project")
    parser.add_argument("-c", "--compiler", type=str, help="sets compiler")
    parser.add_argument("-o", "--output", type=str, help="sets output file")
    parser.add_argument("-asm", "--assembly", type=str, help="sets assembly output file")

    parser.add_argument("command", nargs="?", choices=["run"], help="run the program")

    args = parser.parse_args()

    if args.set:
        if os.path.exists("index.popr"):
            with open("index.popr", "rb") as f:
                data = pickle.load(f)
        else:
            data = []

        data.insert(0, os.path.abspath(args.set))
        with open("index.popr", "wb") as f:
            pickle.dump(data, f)

    if args.add:
        if os.path.exists("index.popr"):
            with open("index.popr", "rb") as f:
                data = pickle.load(f)
        else:
            data = []
        for i in args.add:
            data.insert(1, os.path.abspath(i))
        with open("index.popr", "wb") as f:
            pickle.dump(data, f)

    if args.install:
        if os.path.exists("index.popr"):
            with open("index.popr", "rb") as f:
                data = pickle.load(f)
        else:
            data = []
        for i in args.install:
            data.insert(1, "https://raw.githubusercontent.com/eshnd/popr/refs/heads/main/libs/" + i + ".popb")
        with open("index.popr", "wb") as f:
            pickle.dump(data, f)
    
    if args.compiler:
        if os.path.exists("index.popr"):
            with open("index.popr", "rb") as f:
                data = pickle.load(f)
        else:
            data = []

        data.append(os.path.abspath(args.compiler))
        with open("index.popr", "wb") as f:
            pickle.dump(data, f)
    
    if args.command == "run":
        if os.path.exists("index.popr"):
            with open("index.popr", "rb") as f:
                data = pickle.load(f)
        else:
            data = []
        
        main = data[0]
        with open(main, "r") as f:
            main = f.read()
        
        setup = main[0:main.index(";") + 1]
        main = main[main.index(";") + 1:]

        compiler = data[-1]
        data = data[1:-1]
        filetexts = []

        for filename in data:
            if os.path.exists(filename):
                with open(filename, "r") as f:
                    filetexts.append(f.read())
            else:
                filetexts.append(requests.get(filename).text)
            
            f = filename.replace("https://raw.githubusercontent.com/eshnd/popr/refs/heads/main/libs/", "")
            f = f.replace(".popb", "")
            filetexts[-1] = filetexts[-1].replace("$", "$" + f + ".")

        for text in filetexts:
            main = text + main
        main = setup + main
        
        with open("temp.popr", "w") as f:
            f.write(main)
        
        if args.assembly:
            subprocess.run([compiler, "temp.popr", args.output, args.assembly], check=True)
        else:
            subprocess.run([compiler, "temp.popr", args.output], check=True)

        os.remove("temp.popr")
